{
  "metadata": {
    "version": 1,
    "disable_limits": false
  },
  "nodes": [
    {
      "node_id": "b5f32337-7807-4076-80d5-8f08f3e9cbf0",
      "type": "SOURCE",
      "operator": "sagemaker.redshift_source_0.1",
      "parameters": {
        "dataset_definition": {
          "datasetSourceType": "Redshift",
          "name": "dm.data",
          "clusterIdentifier": "bankdm",
          "database": "bankdm",
          "dbUser": "bankdm",
          "queryString": "SELECT * FROM( select * from dm.data )",
          "unloadIamRole": "arn:aws:iam::138604873012:role/BankDM-RedShift",
          "s3OutputLocation": "s3://sagemaker-ap-southeast-1-138604873012/redshift/",
          "outputFormat": "parquet"
        }
      },
      "trained_parameters": {
        "query_execution_id": "f61552fe-134e-4bd4-b6e5-eb79659747cc",
        "unload_s3_output_location": "s3://sagemaker-ap-southeast-1-138604873012/redshift/83afbce8c9c14ff9a754bfdadc28d4a6/data/"
      },
      "inputs": [],
      "outputs": [
        {
          "name": "default",
          "sampling": {
            "sampling_method": "sample_by_limit",
            "limit_rows": 50000
          }
        }
      ]
    },
    {
      "node_id": "1318c58d-f8be-48b7-a26d-d1f28ee29dec",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.infer_and_cast_type_0.1",
      "parameters": {},
      "trained_parameters": {
        "schema": {
          "job": "string",
          "marital": "string",
          "education": "string",
          "defaulted": "string",
          "housing": "string",
          "loan": "string",
          "contact": "string",
          "month": "string",
          "day_of_week": "string",
          "poutcome": "string",
          "y": "string",
          "age": "long",
          "duration": "long",
          "campaign": "long",
          "pdays": "long",
          "previous": "long",
          "emp_var_rate": "float",
          "cons_price_idx": "float",
          "cons_conf_idx": "float",
          "euribor3m": "float",
          "nr_employed": "long"
        }
      },
      "inputs": [
        {
          "name": "default",
          "node_id": "b5f32337-7807-4076-80d5-8f08f3e9cbf0",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "c3c446cd-411e-4762-9575-ca1007e43c53",
      "type": "VISUALIZATION",
      "operator": "sagemaker.visualizations.describe_0.1",
      "parameters": {
        "name": "Summary"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "1318c58d-f8be-48b7-a26d-d1f28ee29dec",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "83acb903-d8a7-48a1-90cf-add0da2ecca7",
      "type": "VISUALIZATION",
      "operator": "sagemaker.visualizations.histogram_0.1",
      "parameters": {
        "name": "Age",
        "x_axis": "age",
        "color_by": "y"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "1318c58d-f8be-48b7-a26d-d1f28ee29dec",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "b9a89fc2-637c-40de-8479-97d4cf1997e8",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_pandas_0.1",
      "parameters": {
        "code": "import time\nimport pandas as pd\n\n# Change the value . into _\ndf = df.replace(regex=r'\\.', value='_')\ndf = df.replace(regex=r'\\_$', value='')\n\n# Add two new indicators\ndf[\"no_previous_contact\"] = (df[\"pdays\"] == 999).astype(int)\ndf[\"not_working\"] = df[\"job\"].isin([\"student\", \"retired\", \"unemployed\"]).astype(int)\n\n# Add unique ID and event time for features store\ndf['FS_ID'] = df.index + 1000\ncurrent_time_sec = int(round(time.time()))\ndf['FS_time'] = pd.Series([current_time_sec]*len(df), dtype=\"float64\")\n"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "1318c58d-f8be-48b7-a26d-d1f28ee29dec",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "51e49ceb-8313-41a2-9024-5eb5c553d34b",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_columns_0.1",
      "parameters": {
        "operator": "Drop column",
        "drop_column_parameters": {
          "column_to_drop": "emp_var_rate"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "b9a89fc2-637c-40de-8479-97d4cf1997e8",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "5659251b-0242-4c71-b2a9-f314e3ae42ae",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.encode_categorical_0.1",
      "parameters": {
        "operator": "One-hot encode",
        "one_hot_encode_parameters": {
          "invalid_handling_strategy": "Keep",
          "drop_last": false,
          "output_style": "Columns",
          "input_column": "job",
          "output_column": "job"
        },
        "ordinal_encode_parameters": {
          "invalid_handling_strategy": "Replace with NaN"
        }
      },
      "trained_parameters": {
        "one_hot_encode_parameters": {
          "_hash": -1767228197713558300,
          "string_indexer_model": "P)h>@6aWAK2mqWGOH(dpS_j<#003bD000vJ003=ebYWy+bYU-WVRCdWFfcGMFny0rPs1<_hVT3gpS!4ArIqXommMaMKwK*?aksF1;UtJL^}iE}gai^?U%$^|`vS^hO0a>z2Z0gQkwl8fC*iCZ33Fi*51EZWY`vy8;$6^Wp@D21rHn4ZX1VS<xoZ1<E&J;RX8wsdnc%Cr6Rl_$=-&OJtz0p>hCh_Ua+FfFdbQV*YNhh%c3909IHK2<w*D3E44#N$t%Q<e$v45)D3gnW3ZF+A|D8UEJxmQ~8nM`X|BsTG16MfBH{G!&emqC2lacAAkXPqhO6u3vzdsm;uO3X()dx^Z0|XQR000O8oEA${?BBxX4gdfE3;+NC7ytkOZDn*}WMOn+FD`Ila&#>)FfcGME@N_IOD;-gU|?WkV2?`E0{~D<0|XQR000O8oEA${`i>Sh@Bsh-6$1bONB{r;WMOn+FK}UUbS*G2FfcGJWiU25W-(+pEjVIiW-T;fHe@Y0VK8DXHexX~Hexn6Vl*>2En_e+FfMa$VQ_GHE^uLTadl;MjZ@8P+dvRrEAdYom!8&0po0-OBw!1>a#Y*&l3VGagwjKyl(N>2>?Ny}v%5+#!SB&0C?(`Q`U*Yu8Ttqv*-D%KK~Fp1_sz`CH_M)#z8X<Nzc}=()2A+m4chQya?~u;xyrAUTW35IiV$*Jo7C~Bf4aFL4hC+$_W0X}t$KiPE(;hWxs*&lL}(#dDv=1LT8IqjOOb#nm5eF2fDDvvBGO=m2HwUH84W893JU#bTO`u~WGk7kfj>ZEnHL5!CV1JVP<K+<#@K>a9jn2q<H_f3vts)Ey-Ai>M;&tFxCfHWL7G#o*_t}EK~DDFeJPCH$xV>k*?yO3yZ2M<5z=uy-}4V!K5ctF((vBg@4GF!Oa28=r{i`$?sabW4qMOuvS!c6Cm^)kZ<*#0ukX6KUW9DL&_uZP6JCNgBFCaA9EL;U9{-VHE@X(oMFBR{`Bj*KWt>^&ey&{ycD;gN78t9G#0LE!6(G3@W^b<p#j;Ym=LPj${*O9V(Uqmw|Dl$53AI2v$(3b7nU{r>!3-yW%|A$mfXyZBh<<Qq0q@#u-ff8cqB1zhbhp|_cNC6>;i!8wFNEaXVLIjMIO33|^T{OTPt!>p$2^YW>1Z;35=Fyw9MAdm*z<kdc!X;|!w>NtP)h>@6aWAK2mqWGOH<>T(^?V$000mG002z@003lRbYU+paA9(EEif=JFfc7;Fg7`6F=RI_IAUaGEi_>^WGy&hFk&q>Vlg!~Vm3EoG&49YV=yo<E^}^SaBz7paA9(Bb!BueV{&6lE=p!#U|?eCsgHe7bGyV308mQ-0u%!j000080Gt*}Q!Zv&2i*Vw0AT?D022TJ00000000000HlEc0001OWprU=VRT_HaA9(EEif=JFfdR{0Rj{Q6aWAK2mqWGOH=IM!sZSD000aC000;O0000000000005+c4gmlFZDn*}WMOn+FD`Ila&#>)FfcGME@N_IP)h*<6ay3h000O8oEA${`i>Sh@Bsh-6$1bONB{r;0000000000q=8Za003lRbYU-WVRCdWFfcGMFfC;;HaTW7WH&81Vq|75G+{PmEjVE?Vl6geF*P<~HaB84GdL|{FfcGKb8ca9aCt6pVRCVGWpq$W0Rj{Q6aWAK2mqWGOH<>T(^?V$000mG002z@0000000000005+cr~?21WMOn+FD`Ila&#>)FfcGMEoCq^Ic70rH!V0~WM(ZiVK!tfIAJhiEjD5?H8x^4H)1q1I4xr^FfcB2Zeeh6c`k5aa&dKKbS`6ZV^B*41^@s600aO80C)ia03`$f0000",
          "one_hot_encoder_model": "P)h>@6aWAK2mqWGOH<P#J$}^y003zL000vJ003=ebYWy+bYU-WVRCdWFfcGMFny0rO9U|thVTB2oM%h5%#O}g1O*p8c`b38aR>WFntE`V|88AT6x2%&4|$(AIl$zx6c{1#lfsPCo>a-m&nkE|6G~-Lcag4>T*WCl;$0gaI*=t$5eyl|)2%TVXL=ZhzBe5l^AE&jNwJxY(n@bIyvB`gxw^Ope<*FgHN#BjkFztbt+YIb9X9g;9H)GXMPQuK7wTY-(RsRwFX)dZVouybOUzX+lW#~UWILtzD^ry(Y(Kfxuy){R#_Hw%*D~SyPuF+r-=A3fu?OpV@&-^#0|XQR000O8oEA${|LJt<4gdfE3;+NC7ytkOZDn*}WMOn+FD`Ila&#>)FfcGME@N_IOD;-gU|?WksIyhN3;<9|0|XQR000O8oEA${T?YqZegOagFaiJoNB{r;WMOn+FK}UUbS*G2FfcGJH)LZoH#st6EoLxfF)cJXHexMdGGj3<W;ZrCVmW1EFfcP@En_e+FfMa$VQ_GHE^uLTadl;MeNs(JD=`#JV_$Wl3l|wOFpCnfD2!p|O&zDjh3-T|MBRx<+DUxF%godyRjL;J8U8?jh_|+iBACGCew=gfxgn<qXE8y9kxoc3I4#l&XmbrAG`Akw{1U-g-^XB=;DW_ymL=FfK3ugUVg6s+;Xhdlg3%79YeV7WO>HLU#e=lazJ+$0w5bd006_2tqRUdtQdSOm*bn@mvl2kF4b<|p@8oyV2bf?Fdr#hTqqDO2i&j5?ePGP2^5kLUhm_XlhKrE^k^EgRzmvumbw&RqJmL|eTR#x?R&#J}$I@|A-}6#Bkqam2OXHEb$w;z3v(Ai%j)hDWQs<WSFCSSY%30~#8i1HHKAFN8F@f}AwTpSSsDLC5<cD?TL{Zt3vDU1wgtl@TvI-(G&;W(OGGrf`pz(BiHAVDjp?JGA?Zt}in8y*1+na-Nq4Rd6db#Q*xm0S9Wh&oQS(>JKnxwrr>;6rWNOjXe-rMqn0ABF5fzT=Zl{ZjJ0|XQR000O8oEA${aI#ix5&!@I5C8xGO#lD@WMOn+FD`Ila&#>)FfcGMEjMIiGdDRhV=ZPdWic%@IW}S~VKQSeEoL`1IAS?vVlXf>WG!PbFfcB2Zeeh6c`k5aa&dKKbS`6ZV@obdW?*1oVpwd^zUJIND>DF4O928D0~7!N00;n_7E4ppB0YZ90001K0RR9K00000000000001_fdBvi0BvP-VPs)+VJ~oDa&#>)FfcGMP)h*<6ay3h000O8oEA${|LJt<4gdfE3;+NC7ytkO0000000000q=5zj003=ebYWy+bYU+paA9(EEif=JFfcA-a$`_S0Rj{Q6aWAK2mqWGOH*A32V#B!001xo002k;0000000000005+cN&x@>WMOn+FK}UUbS*G2FfcGJH)LZoH#st6EoLxfF)cJXHexMdGGj3<W;ZrCVmW1EFfcP@En_e+FfMa$VQ_GHE^uLTadl;MP)h*<6ay3h000O8oEA${aI#ix5&!@I5C8xGO#lD@0000000000q=7C2003lRbYU+paA9(EEif=JFfc7QWMeZoIWl7{W-w(jEi^ecVl81ZV=*meH#Rt8Ib~unFf(K=V=yo<E^}^SaBz7paA9(Bb!BueV{&6qO9ci10000400aPd0RRB20{{R300"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "51e49ceb-8313-41a2-9024-5eb5c553d34b",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    }
  ]
}